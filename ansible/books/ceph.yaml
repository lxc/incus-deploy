---

- name: Ceph - Add package repository
  hosts: all
  order: shuffle
  gather_facts: yes
  vars:
    task_release: "{{ ceph_release | default('reef') }}"
    task_roles: "{{ ceph_roles | default([]) }}"
  tasks:
    - name: Create apt keyring path
      file:
        path: /etc/apt/keyrings/
        mode: 0755
        state: directory
      when: 'task_roles|length > 0 and task_release != "distro"'

    - name: Add ceph GPG key
      copy:
        src: ../files/ceph/ceph.asc
        dest: /etc/apt/keyrings/ansible-ceph.asc
      notify: Update apt
      when: 'task_roles|length > 0 and task_release != "distro"'

    - name: Get DPKG architecture
      shell: dpkg --print-architecture
      register: dpkg_architecture
      changed_when: false
      check_mode: no
      when: 'task_roles|length > 0 and task_release != "distro"'

    - name: Add ceph package sources
      template:
        src: ../files/ceph/ceph.sources.tpl
        dest: /etc/apt/sources.list.d/ansible-ceph.sources
      notify: Update apt
      when: 'task_roles|length > 0 and task_release != "distro"'

  handlers:
    - name: Update apt
      apt:
        force_apt_get: yes
        update_cache: yes
        cache_valid_time: 0

- name: Ceph - Install packages
  hosts: all
  order: shuffle
  vars:
    task_roles: "{{ ceph_roles | default([]) }}"
  tasks:
    - name: Install ceph-common
      apt:
        name:
          - ceph-common
        install_recommends: no
        state: present
      when: '"client" in task_roles'

    - name: Install ceph-mon
      apt:
        name:
          - ceph-mon
        install_recommends: no
        state: present
      when: '"mon" in task_roles'

    - name: Install ceph-mgr
      apt:
        name:
          - ceph-mgr
          - python3-bcrypt
          - python3-distutils
        install_recommends: no
        state: present
      when: '"mgr" in task_roles'

    - name: Install ceph-mds
      apt:
        name:
          - ceph-mds
        install_recommends: no
        state: present
      when: '"mds" in task_roles'

    - name: Install ceph-osd
      apt:
        name:
          - ceph-osd
          - ceph-volume
        install_recommends: no
        state: present
      when: '"osd" in task_roles'

    - name: Install ceph-rbd-mirror
      apt:
        name:
          - rbd-mirror
        install_recommends: no
        state: present
      when: '"rbd-mirror" in task_roles'

    - name: Install radosgw
      apt:
        name:
          - radosgw
        install_recommends: no
        state: present
      when: '"rgw" in task_roles'

- name: Ceph - Generate cluster keys and maps
  hosts: all
  order: shuffle
  gather_facts: yes
  vars:
    task_fsid: "{{ ceph_fsid | default('') }}"
    task_bootstrap_osd_keyring: ../data/ceph/cluster.{{ task_fsid }}.bootstrap-osd.keyring
    task_client_admin_keyring: ../data/ceph/cluster.{{ task_fsid }}.client.admin.keyring
    task_mon_keyring: ../data/ceph/cluster.{{ task_fsid }}.mon.keyring
    task_mon_map: ../data/ceph/cluster.{{ task_fsid }}.mon.map
    task_roles: "{{ ceph_roles | default([]) }}"
  tasks:
    - name: Generate mon keyring
      delegate_to: 127.0.0.1
      shell:
        cmd: ceph-authtool --create-keyring {{ task_mon_keyring }} --gen-key -n mon. --cap mon 'allow *'
        creates: '{{ task_mon_keyring }}'
      throttle: 1
      when: 'task_fsid'

    - name: Generate client.admin keyring
      delegate_to: 127.0.0.1
      shell:
        cmd: ceph-authtool --create-keyring {{ task_client_admin_keyring }} --gen-key -n client.admin --cap mon 'allow *' --cap osd 'allow *' --cap mds 'allow *' --cap mgr 'allow *'
        creates: '{{ task_client_admin_keyring }}'
      throttle: 1
      notify: Add key to client.admin keyring
      when: 'task_fsid'

    - name: Generate bootstrap-osd keyring
      delegate_to: 127.0.0.1
      shell:
        cmd: ceph-authtool --create-keyring {{ task_bootstrap_osd_keyring }} --gen-key -n client.bootstrap-osd --cap mon 'profile bootstrap-osd' --cap mgr 'allow r'
        creates: '{{ task_bootstrap_osd_keyring }}'
      throttle: 1
      notify: Add key to bootstrap-osd keyring
      when: 'task_fsid'

    - name: Generate mon map
      delegate_to: 127.0.0.1
      shell:
        cmd: monmaptool --create --fsid {{ task_fsid }} {{ task_mon_map }}
        creates: '{{ task_mon_map }}'
      throttle: 1
      notify: Add nodes to mon map
      when: 'task_fsid'

  handlers:
    - name: Add key to client.admin keyring
      delegate_to: 127.0.0.1
      shell:
        cmd: ceph-authtool {{ task_mon_keyring }} --import-keyring {{ task_client_admin_keyring }}

    - name: Add key to bootstrap-osd keyring
      delegate_to: 127.0.0.1
      shell:
        cmd: ceph-authtool {{ task_mon_keyring }} --import-keyring {{ task_bootstrap_osd_keyring }}

    - name: Add nodes to mon map
      delegate_to: 127.0.0.1
      shell:
        cmd: monmaptool --add {{ item.name }} {{ item.ip }} {{ task_mon_map }}
      loop: "{{ lookup('template', '../files/ceph/ceph.monitors.tpl') | from_yaml | default([]) }}"

- name: Ceph - Set up config and keyrings
  hosts: all
  order: shuffle
  gather_facts: no
  vars:
    task_fsid: "{{ ceph_fsid | default('') }}"
    task_keyrings: "{{ ceph_keyrings | default(['admin']) }}"
    task_network_public: "{{ ceph_network_public | default('') }}"
    task_network_private: "{{ ceph_network_private | default('') }}"
    task_roles: "{{ ceph_roles | default([]) }}"
    task_bootstrap_osd_keyring: ../data/ceph/cluster.{{ task_fsid }}.bootstrap-osd.keyring
    task_client_admin_keyring: ../data/ceph/cluster.{{ task_fsid }}.client.admin.keyring
    task_mon_keyring: ../data/ceph/cluster.{{ task_fsid }}.mon.keyring
    task_mon_map: ../data/ceph/cluster.{{ task_fsid }}.mon.map
    task_rbd_cache: "{{ ceph_rbd_cache | default('128Mi') }}"
    task_rbd_cache_max: "{{ ceph_rbd_cache_max | default('96Mi') }}"
    task_rbd_cache_target: "{{ ceph_rbd_cache_target | default('64Mi') }}"
  tasks:
    - name: Transfer the cluster configuration
      template:
        src: ../files/ceph/ceph.conf.tpl
        dest: /etc/ceph/ceph.conf
      notify: Restart Ceph
      when: 'task_roles|length > 0'

    - name: Create main storage directory
      file:
        path: /var/lib/ceph
        owner: ceph
        group: ceph
        mode: 0750
        state: directory
      when: 'task_roles|length > 1 or task_roles[0] != "client"'

    - name: Create monitor bootstrap path
      file:
        path: /var/lib/ceph/bootstrap-mon
        owner: ceph
        group: ceph
        mode: 0770
        state: directory
      when: '"mon" in task_roles'

    - name: Create OSD bootstrap path
      file:
        path: /var/lib/ceph/bootstrap-osd
        owner: ceph
        group: ceph
        mode: 0770
        state: directory
      when: '"osd" in task_roles'

    - name: Transfer main admin keyring
      copy:
        src: '{{ task_client_admin_keyring }}'
        dest: /etc/ceph/ceph.client.admin.keyring
        owner: ceph
        group: ceph
        mode: 0660
      notify: Restart Ceph
      when: '("client" in task_roles and "admin" in task_keyrings) or "mon" in task_roles'

    - name: Transfer additional client keyrings
      copy:
        src: '../data/ceph/cluster.{{ task_fsid }}.client.{{ item }}.keyring'
        dest: '/etc/ceph/ceph.client.{{ item }}.keyring'
        owner: ceph
        group: ceph
        mode: 0660
      with_items:
        '{{ task_keyrings | difference(["admin"]) }}'
      when: '"client" in task_roles'

    - name: Transfer bootstrap mon keyring
      copy:
        src: '{{ task_mon_keyring }}'
        dest: /var/lib/ceph/bootstrap-mon/ceph.keyring
        owner: ceph
        group: ceph
        mode: 0660
      when: '"mon" in task_roles'

    - name: Transfer bootstrap mon map
      copy:
        src: '{{ task_mon_map }}'
        dest: /var/lib/ceph/bootstrap-mon/ceph.monmap
        owner: ceph
        group: ceph
        mode: 0660
      when: '"mon" in task_roles'

    - name: Transfer bootstrap OSD keyring
      copy:
        src: '{{ task_bootstrap_osd_keyring }}'
        dest: /var/lib/ceph/bootstrap-osd/ceph.keyring
        owner: ceph
        group: ceph
        mode: 0660
      when: '"osd" in task_roles'

  handlers:
    - name: Restart Ceph
      systemd:
        name: ceph.target
        state: restarted

- name: Ceph - Deploy mon
  hosts: all
  order: shuffle
  gather_facts: yes
  vars:
    task_fsid: "{{ ceph_fsid | default('') }}"
    task_roles: "{{ ceph_roles | default([]) }}"
  tasks:
    - name: Bootstrap Ceph mon
      shell:
        cmd: sudo -u ceph ceph-mon --mkfs -i {{ inventory_hostname_short }} --monmap /var/lib/ceph/bootstrap-mon/ceph.monmap --keyring /var/lib/ceph/bootstrap-mon/ceph.keyring
        creates: /var/lib/ceph/mon/ceph-{{ inventory_hostname_short }}/keyring
      notify:
        - Enable msgr2
        - Disable insecure_global_id_reclaim
      when: '"mon" in task_roles'

    - name: Enable and start Ceph mon
      systemd:
        enabled: yes
        name: ceph-mon@{{ inventory_hostname_short }}
        state: started
      when: '"mon" in task_roles'

  handlers:
    - name: Enable msgr2
      shell:
        cmd: ceph mon enable-msgr2

    - name: Disable insecure_global_id_reclaim
      shell:
        cmd: ceph config set global auth_allow_insecure_global_id_reclaim false

- name: Ceph - Deploy osd
  hosts: all
  order: shuffle
  gather_facts: yes
  vars:
    task_disks: "{{ ceph_disks | default([]) }}"
    task_fsid: "{{ ceph_fsid | default('') }}"
    task_roles: "{{ ceph_roles | default([]) }}"
  tasks:
    - name: Bootstrap Ceph OSD
      shell:
        cmd: ceph-volume lvm create --data /dev/disk/by-id/{{ item.data }}{% if "db" in item %} --block.db /dev/disk/by-id/{{ item.db }}{% endif %}
        creates: /var/lib/ceph/osd/.{{ item.data }}.created
      loop: '{{ task_disks }}'
      when: '"osd" in task_roles'

    - name: Bootstrap Ceph OSD (stamp)
      shell:
        cmd: touch /var/lib/ceph/osd/.{{ item.data }}.created
        creates: /var/lib/ceph/osd/.{{ item.data }}.created
      loop: '{{ task_disks }}'
      when: '"osd" in task_roles'

- name: Ceph - Deploy mgr
  hosts: all
  order: shuffle
  gather_facts: yes
  vars:
    task_fsid: "{{ ceph_fsid | default('') }}"
    task_roles: "{{ ceph_roles | default([]) }}"
  tasks:
    - name: Create /var/lib/ceph/mgr/ceph-{{ inventory_hostname_short }}
      file:
        path: /var/lib/ceph/mgr/ceph-{{ inventory_hostname_short }}
        owner: ceph
        group: ceph
        mode: 0770
        state: directory
      register: deploy_mgr
      when: '"mgr" in task_roles'

    - name: Create mgr keyring
      delegate_to: "{{ lookup('template', '../files/ceph/ceph.monitors.names.tpl') | from_yaml | first }}"
      shell:
        cmd: ceph auth get-or-create mgr.{{ inventory_hostname_short }} mon 'allow profile mgr' osd 'allow *' mds 'allow *'
      register: mgr_keyring
      when: '"mgr" in task_roles and deploy_mgr.changed'

    - name: Transfer mgr keyring
      copy:
        content: "{{ mgr_keyring.stdout }}\n"
        dest: "/var/lib/ceph/mgr/ceph-{{ inventory_hostname_short }}/keyring"
        owner: ceph
        group: ceph
        mode: 0660
      when: '"mgr" in task_roles and deploy_mgr.changed'

    - name: Enable ceph mgr
      systemd:
        enabled: yes
        name: ceph-mgr@{{ inventory_hostname_short }}
        state: started
      when: '"mgr" in task_roles'

- name: Ceph - Deploy mds
  hosts: all
  order: shuffle
  gather_facts: yes
  vars:
    task_fsid: "{{ ceph_fsid | default('') }}"
    task_roles: "{{ ceph_roles | default([]) }}"
  tasks:
    - name: Create /var/lib/ceph/mds/ceph-{{ inventory_hostname_short }}
      file:
        path: /var/lib/ceph/mds/ceph-{{ inventory_hostname_short }}
        owner: ceph
        group: ceph
        mode: 0770
        state: directory
      register: deploy_mds
      when: '"mds" in task_roles'

    - name: Create mds keyring
      delegate_to: "{{ lookup('template', '../files/ceph/ceph.monitors.names.tpl') | from_yaml | first }}"
      shell:
        cmd: ceph auth get-or-create mds.{{ inventory_hostname_short }} mon 'profile mds' mgr 'profile mds' mds 'allow *' osd 'allow *'
      register: mds_keyring
      when: '"mds" in task_roles and deploy_mds.changed'

    - name: Transfer mds keyring
      copy:
        content: "{{ mds_keyring.stdout }}\n"
        dest: "/var/lib/ceph/mds/ceph-{{ inventory_hostname_short }}/keyring"
        owner: ceph
        group: ceph
        mode: 0660
      when: '"mds" in task_roles and deploy_mds.changed'

    - name: Enable ceph mds
      systemd:
        enabled: yes
        name: ceph-mds@{{ inventory_hostname_short }}
        state: started
      when: '"mds" in task_roles'

- name: Ceph - Deploy rgw
  hosts: all
  order: shuffle
  gather_facts: yes
  vars:
    task_fsid: "{{ ceph_fsid | default('') }}"
    task_roles: "{{ ceph_roles | default([]) }}"
  tasks:
    - name: Create /var/lib/ceph/radosgw/ceph-rgw.{{ inventory_hostname_short }}
      file:
        path: /var/lib/ceph/radosgw/ceph-rgw.{{ inventory_hostname_short }}
        owner: ceph
        group: ceph
        mode: 0770
        state: directory
      register: deploy_rgw
      when: '"rgw" in task_roles'

    - name: Create Ceph rgw keyring
      delegate_to: "{{ lookup('template', '../files/ceph/ceph.monitors.names.tpl') | from_yaml | first }}"
      shell:
        cmd: ceph auth get-or-create client.rgw.{{ inventory_hostname_short }} mon 'allow rw' osd 'allow rwx'
      register: rgw_keyring
      when: '"rgw" in task_roles and deploy_rgw.changed'

    - name: Transfer rgw keyring
      copy:
        content: "{{ rgw_keyring.stdout }}\n"
        dest: "/var/lib/ceph/radosgw/ceph-rgw.{{ inventory_hostname_short }}/keyring"
        owner: ceph
        group: ceph
        mode: 0660
      when: '"rgw" in task_roles and deploy_rgw.changed'

    - name: Enable ceph rgw
      systemd:
        enabled: yes
        name: ceph-radosgw@rgw.{{ inventory_hostname_short }}
        state: started
      when: '"rgw" in task_roles'

- name: Ceph - Deploy rbd-mirror
  hosts: all
  order: shuffle
  gather_facts: yes
  vars:
    task_fsid: "{{ ceph_fsid | default('') }}"
    task_roles: "{{ ceph_roles | default([]) }}"
  tasks:
    - name: Enable ceph rbd-mirror
      systemd:
        enabled: yes
        name: ceph-rbd-mirror@admin
        state: started
      when: '"rbd-mirror" in task_roles'
